return {

  --General Options
  general = {
    -- The direction the villager is in relative to the sensor
    -- Supports 'north', 'south', 'west', and 'east'
    villager_direction = "north"
    -- The distance between the sensor and the villager.
    villager_distance = 2,
    -- The file that holds trade data (For future use in sorting by available trades)
    trade_data_file = "/etc/villager_sorter/villager_trades.dat",
    -- The port to connect on for broadcasting a better trade packet (For future use)
    better_trade_port = 2525
  },

  redstone = {

    trigger_check = {
      address = "UUID-GOES-HERE",
      color = "white",
      side = "north"
    },
    suspend_execution = {
      address = "UUID-GOES-HERE",
      color = "red",
      side = "north"
    },
    dump_all_villagers = {
      address = "UUID-GOES-HERE",
      color = "orange",
      side = "north"
    }

  }

  -- Various logging options
  logging = {
    -- The available types of logging
    log_types = {
      -- Log the villagers that come through, and their status (accepted or rejected)
      villager = true,
      -- General information
      general = true
    },
    -- The minimum level to log. Supports DEBUG, INFO, WARN, and ERROR
    general_log_level = "INFO",
    -- The directory logs are stored in
    log_directory = "/var/log/villager_sorter"
    -- The name of the general log file
    general_log_name = "general.log",
    -- The name of the villager log file
    villager_log_name = "villagers.log"
  },

  -- The villagers you want to keep.
  -- You can get the needed data using PM Dumper 2.
  villagers = {
    -- Each entry has a key of the villager id
    ["minecraft:librarian"] = {
      -- The list of careers you want to keep
      careers = {
        [1] = "librarian"
      },
      -- A list of trade results you want to have (For future use)
      trades = {
          [1] = {
            -- Inputs to the trade
            inputs = {
              [1] = {
                id = "minecraft:emerald",
                quantity = 12,
                -- How to compare the quantity (supports 'max', 'min', 'equal'. Values are inclusive)
                comparison = "max"
              },
              [2] = {
                id = "minecraft:book",
                quantity = 1,
                comparison = "equal"
                -- Also supports the 'data' attribute (see below)
              }
            },
            outputs = {
              id = "minecraft:enchanted_book",
              quantity = 1,
              comparison = "equal",
              -- Data about the item. Supports 'enchantments' and 'meta'. More entries will be added as needed.
              data = {
                -- A list of enchantments
                enchantments = {
                  ["1"] = {
                    id = "minecraft:silk_touch",
                    level = 1,
                    -- See above for valid values
                    comparison = 'equal'
                  }
                }
              }
            }
          }
      }
    },
    ["minecraft:farmer"] = {
      careers = {
        [1] = "farmer"
      },
      trades = {
        -- TODO
      }
    }
  }
}